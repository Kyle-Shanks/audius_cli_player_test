package common

// type ImageType = map[string]string

type User struct {
	Album_count              int    `json:"album_count"`
	Artist_pick_track_id     string `json:"artist_pick_track_id"`
	Bio                      string `json:"bio"`
	Does_follow_current_user bool   `json:"does_follow_current_user"`
	Erc_wallet               string `json:"erc_wallet"`
	Followee_count           int    `json:"followee_count"`
	Follower_count           int    `json:"follower_count"`
	Handle                   string `json:"handle"`
	Id                       string `json:"id"`
	Is_available             bool   `json:"is_available"`
	Is_deactivated           bool   `json:"is_deactivated"`
	Is_verified              bool   `json:"is_verified"`
	Location                 string `json:"location"`
	Name                     string `json:"name"`
	Playlist_count           int    `json:"playlist_count"`
	Repost_count             int    `json:"repost_count"`
	Spl_wallet               string `json:"spl_wallet"`
	Supporter_count          int    `json:"supporter_count"`
	Supporting_count         int    `json:"supporting_count"`
	Total_audio_balance      int    `json:"total_audio_balance"`
	Track_count              int    `json:"track_count"`

	// NOTE: Unused Fields
	// Cover_photo      ImageType `json:"cover_photo"`
	// Profile_picture  ImageType `json:"profile_picture"`
}

type UserApiResponse struct {
	Data User `json:"data"`
}

type UsersApiResponse struct {
	Data []User `json:"data"`
}

type Track struct {
	Description    string `json:"description"`
	Downloadable   bool   `json:"downloadable"`
	Duration       int    `json:"duration"`
	Favorite_count int    `json:"favorite_count"`
	Genre          string `json:"genre"`
	Id             string `json:"id"`
	Is_streamable  bool   `json:"is_streamable"`
	Mood           string `json:"mood"`
	Permalink      string `json:"permalink"`
	Play_count     int    `json:"play_count"`
	Release_date   string `json:"release_date"`
	Repost_count   int    `json:"repost_count"`
	Title          string `json:"title"`
	Track_cid      string `json:"track_cid"`
	User           User   `json:"user"`

	// NOTE: Unused Fields
	// Artwork    ImageType `json:"artwork"`
	// Remix_of
	// Tags
}

type TrackApiResponse struct {
	Data Track `json:"data"`
}

type TracksApiResponse struct {
	Data []Track `json:"data"`
}

type TrackFavorite struct {
	TrackId string `json:"favorite_item_id"`
	UserId  string `json:"user_id"`

	// NOTE: Unused Fields
	// FavoriteType    string `json:"favorite_type"`
	// CreatedAt    ImageType `json:"created_at"`
}

type TrackFavoritesApiResponse struct {
	Data []TrackFavorite `json:"data"`
}

type Playlist struct {
	Description            string `json:"description"`
	Permalink              string `json:"permalink"`
	Id                     string `json:"id"`
	Is_album               bool   `json:"is_album"`
	User                   User   `json:"user"`
	Is_image_autogenerated bool   `json:"is_image_autogenerated"`
	Playlist_name          string `json:"playlist_name"`
	Repost_count           int    `json:"repost_count"`
	Favorite_count         int    `json:"favorite_count"`
	Total_play_count       int    `json:"total_play_count"`
	Cover_art_sizes        string `json:"cover_art_sizes"`
	Is_private             bool   `json:"is_private"`

	// NOTE: Unused Fields
	// Artwork    ImageType `json:"artwork"`
	// Playlist_contents
}

type PlaylistApiResponse struct {
	Data Playlist `json:"data"`
}

type PlaylistsApiResponse struct {
	Data []Playlist `json:"data"`
}
